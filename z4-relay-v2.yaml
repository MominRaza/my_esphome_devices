esphome:
  name: z4-relay-v2
  friendly_name: "Z4 Relay v2"

esp32:
  board: esp32dev
  framework:
    type: arduino

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    password: !secret ap_password

captive_portal:

logger:

ota:
  platform: esphome
  password: !secret ota_password_v2

web_server:
  port: 80
  auth:
    username: !secret web_server_username
    password: !secret web_server_password
  ota: false
  version: 3

switch:
- platform: gpio
  pin:
    number: GPIO5
    inverted: True
  name: "Office Light"
  id: office_light
  restore_mode: RESTORE_DEFAULT_OFF
- platform: gpio
  pin:
    number: GPIO17
    inverted: True
  name: "Workbench Light"
  restore_mode: RESTORE_DEFAULT_OFF
- platform: gpio
  pin:
    number: GPIO16
    inverted: True
  name: "Bathroom Light"
  restore_mode: RESTORE_DEFAULT_OFF
- platform: gpio
  pin:
    number: GPIO4
    inverted: True
  name: "Socket"
  restore_mode: RESTORE_DEFAULT_OFF
- platform: gpio
  pin:
    number: GPIO23
    inverted: True
  id: fan_speed_1
  restore_mode: RESTORE_DEFAULT_OFF
- platform: gpio
  pin:
    number: GPIO22
    inverted: True
  id: fan_speed_2
  restore_mode: RESTORE_DEFAULT_OFF
- platform: gpio
  pin:
    number: GPIO21
    inverted: True
  id: fan_speed_3
  restore_mode: RESTORE_DEFAULT_OFF
- platform: gpio
  pin:
    number: GPIO19
    inverted: True
  id: fan_speed_4
  restore_mode: RESTORE_DEFAULT_OFF

sensor:
- platform: dht
  pin: GPIO18
  temperature:
    name: "Office Temperature"
    filters:
    - filter_out: nan
  humidity:
    name: "Office Humidity"
    filters:
    - filter_out: nan
  model: DHT11
  update_interval: 60s

binary_sensor:
- platform: gpio
  pin: GPIO25
  id: motion_sensor
  device_class: motion
  on_press:
    then:
      if:
        condition:
          switch.is_off: office_light
        then:
        - switch.turn_on: office_light
        - script.stop: turn_off_led_timer
        else:
        - script.stop: turn_off_led_timer
  on_release:
    then:
      if:
        condition:
          script.is_running: turn_off_led_timer
        else:
        - script.execute: turn_off_led_timer
- platform: gpio
  pin:
    number: GPIO33
    mode:
      input: True
      pullup: True
    inverted: True
  id: fan_speed_rotary_1
  filters:
  - delayed_on_off: 100ms
  on_press:
    then:
    - number.set:
        id: fan_speed
        value: 1
  on_release:
    then:
    - number.set:
        id: fan_speed
        value: 0
- platform: gpio
  pin:
    number: GPIO26
    mode:
      input: True
      pullup: True
    inverted: True
  id: fan_speed_rotary_2
  filters:
  - delayed_on_off: 100ms
  on_press:
    then:
    - number.set:
        id: fan_speed
        value: 2
- platform: gpio
  pin:
    number: GPIO27
    mode:
      input: True
      pullup: True
    inverted: True
  id: fan_speed_rotary_3
  filters:
  - delayed_on_off: 100ms
  on_press:
    then:
    - number.set:
        id: fan_speed
        value: 3
- platform: gpio
  pin:
    number: GPIO14
    mode:
      input: True
      pullup: True
    inverted: True
  id: fan_speed_rotary_4
  filters:
  - delayed_on_off: 100ms
  on_press:
    then:
    - number.set:
        id: fan_speed
        value: 4
  on_release:
    then:
    - number.set:
        id: fan_speed
        value: 0

script:
- id: turn_off_led_timer
  then:
    if:
      condition:
        switch.is_on: office_light
      then:
      - delay: 120s
      - switch.turn_off: office_light

number:
- platform: template
  name: "Office Fan Speed"
  id: fan_speed
  min_value: 0
  max_value: 4
  step: 1
  optimistic: true
  restore_value: True
  device_class: speed
  mode: SLIDER
  on_value:
    then:
    - if:
        condition:
          lambda: return (x == 0);
        then:
        - switch.turn_off: fan_speed_1
        - switch.turn_off: fan_speed_2
        - switch.turn_off: fan_speed_3
        - switch.turn_off: fan_speed_4
    - if:
        condition:
          lambda: return (x == 1);
        then:
        - switch.turn_off: fan_speed_2
        - switch.turn_off: fan_speed_3
        - switch.turn_off: fan_speed_4

        - switch.turn_on: fan_speed_1
    - if:
        condition:
          lambda: return (x == 2);
        then:
        - switch.turn_off: fan_speed_1
        - switch.turn_off: fan_speed_3
        - switch.turn_off: fan_speed_4

        - switch.turn_on: fan_speed_2
    - if:
        condition:
          lambda: return (x == 3);
        then:
        - switch.turn_off: fan_speed_1
        - switch.turn_off: fan_speed_4

        - switch.turn_on: fan_speed_2
        - switch.turn_on: fan_speed_3
    - if:
        condition:
          lambda: return (x == 4);
        then:
        - switch.turn_off: fan_speed_1
        - switch.turn_off: fan_speed_2
        - switch.turn_off: fan_speed_3

        - switch.turn_on: fan_speed_4
