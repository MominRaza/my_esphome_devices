esphome:
  name: z4-relay-v2
  friendly_name: "Z4 Relay v2"

esp32:
  board: esp32dev
  framework:
    type: arduino

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    password: !secret ap_password

captive_portal:

logger:

ota:
  platform: esphome
  password: !secret ota_password_v2

web_server:
  port: 80
  auth:
    username: !secret web_server_username
    password: !secret web_server_password
  ota: false
  version: 3

switch:
  - platform: gpio
    pin: GPIO2
    name: "USER LED"
    id: user_led
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    pin: GPIO23
    name: "Fan speed 1"
    id: fan_speed_1
    restore_mode: RESTORE_DEFAULT_OFF
    interlock: &interlock_group [fan_speed_1, fan_speed_2, fan_speed_3, fan_speed_4]
  - platform: gpio
    pin: GPIO22
    name: "Fan speed 2"
    id: fan_speed_2
    restore_mode: RESTORE_DEFAULT_OFF
    interlock: *interlock_group
  - platform: gpio
    pin: GPIO21
    name: "Fan speed 3"
    id: fan_speed_3
    restore_mode: RESTORE_DEFAULT_OFF
    interlock: *interlock_group
  - platform: gpio
    pin: GPIO19
    name: "Fan speed 4"
    id: fan_speed_4
    restore_mode: RESTORE_DEFAULT_OFF
    interlock: *interlock_group

output:
  - platform: template
    id: custom_fan
    type: float 
    write_action:
      - if:
          condition:
            lambda: return ((state == 0));
          then:
            - switch.turn_off: fan_speed_1
            - switch.turn_off: fan_speed_2
            - switch.turn_off: fan_speed_3
            - switch.turn_off: fan_speed_4
      - if:
          condition:
            lambda: return ((state > 0) && (state <= 0.25));
          then:
            - switch.turn_on: fan_speed_1
            
      - if:
          condition:
            lambda: return ((state > 0.25) && (state <= 0.5));
          then:
            - switch.turn_on: fan_speed_2

      - if:
          condition:
            lambda: return ((state > 0.5) && (state <= 0.75));
          then:
            - switch.turn_on: fan_speed_3
      - if:
          condition:
            lambda: return ((state > 0.75));
          then:
            - switch.turn_on: fan_speed_4

fan:
  - platform: speed
    output: custom_fan
    name: "Office Fan"
    id: office_fan
    speed_count: 4

sensor:
  - platform: dht
    pin: GPIO18
    temperature:
      name: "Office Temperature"
      filters:
        - filter_out: nan
    humidity:
      name: "Office Humidity"
      filters:
        - filter_out: nan
    model: DHT11
    update_interval: 60s

binary_sensor:
  - platform: gpio
    pin: GPIO25
    name: "Office Door"
    device_class: motion
    on_press:
      then:
        if:
          condition:
            switch.is_off: user_led
          then:
            - switch.turn_on: user_led
            - script.stop: turn_off_led_timer
          else:
            - script.stop: turn_off_led_timer
    on_release:
      then:
        if:
          condition:
            script.is_running: turn_off_led_timer
          else:
            - script.execute: turn_off_led_timer
  - platform: gpio
    pin:
      number: GPIO36
      mode: input
    name: "Fan Speed 0 Button"
    on_press: 
      then:
        - output.set_level:
            id: custom_fan
            level: 0.0
  - platform: gpio
    pin:
      number: GPIO39
      mode: input
    name: "Fan Speed 1 Button"
    on_press: 
      then:
        - output.set_level:
            id: custom_fan
            level: 0.25
  - platform: gpio
    pin:
      number: GPIO34
      mode: input
    name: "Fan Speed 2 Button"
    on_press:
      then:
        - output.set_level:
            id: custom_fan
            level: 0.5
  - platform: gpio
    pin:
      number: GPIO35
      mode: input
    name: "Fan Speed 3 Button"
    on_press:
      then:
        - output.set_level:
            id: custom_fan
            level: 0.75
  - platform: gpio
    pin:
      number: GPIO32
      mode: input
    name: "Fan Speed 4 Button"
    on_press:
      then:
        - output.set_level:
            id: custom_fan
            level: 1.0

script:
  - id: turn_off_led_timer
    then:
      if:
        condition:
          switch.is_on: user_led
        then:
          - delay: 10s
          - switch.turn_off: user_led
